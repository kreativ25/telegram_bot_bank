from echo.main_libraries import *

bot = telebot.TeleBot(conf.token)


@bot.message_handler(commands=['start'])
# –≤—ã–≤–æ–¥–∏–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
def send_welcom(message):
    bot.send_message(
        message.chat.id,
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã\n'
        '–í—ã–±–∏—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª!',
        reply_markup=global_menu()
    )


@bot.message_handler(content_types=['text'])
# –≤—ã–≤–æ–¥–∏–º –º–µ–Ω—é –ù–ë
def send_menu_nb(message):
    if message.text == '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–∞–Ω–∫':
        bot.send_message(
            chat_id=message.chat.id,
            text='–ö–∞–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
            reply_markup=button_menu_nb()
        )
    if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
        bot.send_message(
            chat_id=message.chat.id,
            text='–í—ã–±–∏—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª!',
            reply_markup=global_menu()
        )
    if message.text == '–°—Ç–∞–≤–∫–∏ –ù–ë':
        bot.send_message(
            chat_id=message.chat.id,
            text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä!',
            reply_markup=button_nb_stavki()
        )
    if message.text == '–ù–æ–≤–æ—Å—Ç–∏':
        bot.send_message(
            chat_id=message.chat.id,
            text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä!',
            reply_markup=button_nb_news()
        )


@bot.callback_query_handler(func=lambda message: True)
def send_menu_nb_sr(message):
    # –º–µ–Ω—é —Å—Ç–∞–≤–∫–∏ –°–†
    if message.data == 'nb_stavki_sr':
        bot.edit_message_text(
            text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä!',
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
            reply_markup=button_nb_sr()
        )

    # –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é —Å—Ç–∞–≤–æ–∫ –ù–ë
    if message.data == 'nb_stavka_sr_back':
        bot.edit_message_text(
            text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä!',
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
            reply_markup=button_nb_stavki()
        )

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –æ–¥–Ω–æ–¥–Ω–µ–≤–Ω–æ–π —Å—Ç–∞–≤–∫–∏ –°–†
    if message.data == 'nb_stavka_sr_1d':
        bot.delete_message(
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
        )
        bot.send_photo(
            chat_id=message.message.chat.id,
            photo=get_sr_1d(),
            reply_markup=button_nb_sr_2()
        )

    # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∏–Ω–ª–∞–π–Ω –º–µ–Ω—é, —É–¥–∞–ª—è—è —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.data == 'nb_inline_stavka_sr_back':
        bot.delete_message(
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
        )
        bot.send_message(
            chat_id=message.message.chat.id,
            text='–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä',
            reply_markup=button_nb_stavki()
        )

    # –æ—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞ –¥–∏–Ω–∞–º–∏–∫–∏ —Å—Ç–∞–≤–∫–∏ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è
    if message.data == 'nb_satvka_sr_all':
        bot.delete_message(
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
        )
        bot.send_photo(
            chat_id=message.message.chat.id,
            photo=button_nb_sr_all(),
            reply_markup=button_nb_sr_2()
        )

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ù–ë - —Ä–∞–∑–¥–µ–ª "–ù–æ–≤–æ—Å—Ç–∏"
    if message.data == 'nb_news_news':
        bot.delete_message(
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
        )
        bot.send_message(
            chat_id=message.message.chat.id,
            text=news_nb(),
            parse_mode='HTML',
            disable_web_page_preview=True,
            reply_markup=button_nb_news()
        )

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ù–ë - —Ä–∞–∑–¥–µ–ª "–ü—Ä–µ—Å—Å-—Ä–µ–ª–∏–∑—ã"
    if message.data == 'nb_news_press':
        bot.delete_message(
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
        )
        bot.send_message(
            chat_id=message.message.chat.id,
            text=news_press(),
            parse_mode='HTML',
            disable_web_page_preview=True,
            reply_markup=button_nb_news()
        )

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ù–ë - —Ä–∞–∑–¥–µ–ª "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"
    if message.data == 'nb_news_analitic':
        bot.delete_message(
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
        )
        bot.send_message(
            chat_id=message.message.chat.id,
            text=news_analitic(),
            parse_mode='HTML',
            disable_web_page_preview=True,
            reply_markup=button_nb_news()
        )

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ù–ë - —Ä–∞–∑–¥–µ–ª "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    if message.data == 'nb_news_stat':
        bot.delete_message(
            chat_id=message.message.chat.id,
            message_id=message.message.message_id,
        )
        bot.send_message(
            chat_id=message.message.chat.id,
            text=news_statistic(),
            parse_mode='HTML',
            disable_web_page_preview=True,
            reply_markup=button_nb_news()
        )


if __name__ == '__main__':
    bot.polling(none_stop=True)














# from telegram import Bot
# from telegram import Update
# from telegram import ParseMode
# from telegram.ext import Updater
# from telegram.ext import CommandHandler
# from telegram.ext import MessageHandler
# from telegram.ext import Filters
# from telegram.ext import CallbackContext
# from telegram.ext import CallbackQueryHandler
# from echo.cofig import token
#
# import echo.menu.button_inline_nb_stavki as bl_nb_stavki
# import echo.menu.button_nb_sr as bl_nb_stavki_sr
# import echo.menu.global_menu as global_menu
# import echo.menu.button_menu_nb as menu_nb
#
#
# # —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–º–∞–Ω–¥—É start
# def do_start(update: Update, context: CallbackContext):
#     update.message.reply_text(
#         text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! :)',
#         reply_markup=global_menu.get_base_menu(),
#     )
#
#
# # —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ö–û–ú–ú–ê–ù–î–´
# def do_echo(update: Update, context: CallbackContext):
#     if update.message.text == global_menu.TITLES_GLOBAL[global_menu.CALLBACK_BUTTON_MENU_NB]:
#         update.message.reply_text(
#             text='–≠—Ç–æ –º–µ–Ω—é –ù–ë',
#             reply_markup=menu_nb.get_menu_nb()
#         )
#     if update.message.text == global_menu.TITLES_GLOBAL[global_menu.CALLBACK_BUTTON_MENU_KB]:
#         update.message.reply_text(
#             text='–≠—Ç–æ –º–µ–Ω—é –±–∞–Ω–∫–æ–≤',
#             reply_markup=global_menu.get_base_menu(),
#         )
#     if update.message.text == menu_nb.TITLES_NB[menu_nb.CALLBACK_BUTTON_BACK_NB]:
#         update.message.reply_text(
#             text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
#             reply_markup=global_menu.get_base_menu()
#         )
#     if update.message.text == menu_nb.TITLES_NB[menu_nb.CALLBACK_BUTTON_STAVKI_NB]:
#         update.message.reply_text(
#             text='–ö–∞–∫–∞—è?',
#             reply_markup=bl_nb_stavki.get_inline_nb_stavki()
#         )
#
#
# def do_menu(up: Update, context: CallbackContext):
#     query = up.callback_query
#     data = query.data
#     chat_id = up.effective_message.chat_id
#     current_text = up.effective_message.text
#
#     if data == bl_nb_stavki.CALLBACK_BUTTON_STAVKI_SR:
#         query.edit_message_text(
#             text=current_text,
#             parse_mode=ParseMode.MARKDOWN,
#             reply_markup=bl_nb_stavki_sr.get_menu_inline_stavka_sr(),
#         )
#     if data == bl_nb_stavki_sr.CALLBACK_BUTTON_STAVKI_SR_BACK:
#         query.edit_message_text(
#             text=current_text,
#             parse_mode=ParseMode.MARKDOWN,
#             reply_markup=bl_nb_stavki.get_inline_nb_stavki()
#         )
#
#
# def main():
#     bot = Bot(
#         token=token,
#     )
#     updater = Updater(
#         bot=bot,
#     )
#     start_handler = CommandHandler('start', do_start)  # –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–º–∞–Ω–¥—ã start
#     echo_handler = MessageHandler(Filters.text, do_echo)  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±—ã—Ö —Ç–µ–∫—Å—Ç–≤–æ—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π - –ù–ï –ö–û–ú–ú–ê–ù–î
#     buttons_handler = CallbackQueryHandler(callback=do_menu, )
#
#     # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
#     updater.dispatcher.add_handler(start_handler)
#     updater.dispatcher.add_handler(echo_handler)
#     updater.dispatcher.add_handler(buttons_handler)
#
#     # –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
#     updater.start_polling()
#     updater.idle()  # —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –∑–∞–≤–µ—Ä—à–∞–ª—Å—è –ø–æ–∫–∞ –Ω–µ –¥–æ—Ä–∞–±–æ—Ç–∞—é—Ç –≤—Å–µ –∞–ø–¥–µ–π—Ç—ã
#
#
# if __name__ == '__main__':
#     main()
